[
    {
        "id": "1c8b0c202345de2d",
        "type": "tab",
        "label": "Fluxo 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a59f2b2f1bbf3210",
        "type": "mqtt-broker",
        "name": "LabsoftIot",
        "broker": "143.107.102.8",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "11a6dcabfb56850d",
        "type": "ui_tab",
        "name": "Uso diário",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "aada2ce494143ebf",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#001823",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#ff8040",
                    "value": "#001823",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#003343",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#001823",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#005164",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#005164",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#001823",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#003343",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Consumo Energético - Linha X - Automatizada",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "bba8abb3efe5e226",
        "type": "ui_group",
        "name": "Dados JE05",
        "tab": "11a6dcabfb56850d",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b393f35ae74b6241",
        "type": "ui_group",
        "name": "Gráficos",
        "tab": "6c3063de6b44db72",
        "order": 3,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9973bf030ca284b8",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "143.107.102.8",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "data-energia",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "leitor",
        "userFieldType": "str",
        "password": "garsoftData2024",
        "passwordFieldType": "str"
    },
    {
        "id": "6c3063de6b44db72",
        "type": "ui_tab",
        "name": "Histórico Consumo",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e8192717fdd43381",
        "type": "ui_group",
        "name": "Filtros",
        "tab": "6c3063de6b44db72",
        "order": 2,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3da1a88e973e1236",
        "type": "ui_group",
        "name": "Base de dados",
        "tab": "11a6dcabfb56850d",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4da02ac4631fb0b4",
        "type": "mqtt in",
        "z": "1c8b0c202345de2d",
        "name": "Dados JE05",
        "topic": "garsoft/dev/je05/dados",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a59f2b2f1bbf3210",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 200,
        "wires": [
            [
                "2ef2eb3bf26411b3",
                "3e226a217900805c"
            ]
        ]
    },
    {
        "id": "2ef2eb3bf26411b3",
        "type": "debug",
        "z": "1c8b0c202345de2d",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 340,
        "y": 100,
        "wires": []
    },
    {
        "id": "3e226a217900805c",
        "type": "function",
        "z": "1c8b0c202345de2d",
        "name": "function 1",
        "func": "msg.payload = msg.payload.DATA.PT;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 160,
        "wires": [
            [
                "d3ede433c8660b18",
                "51c39b502d279935",
                "198d4d935011965e"
            ]
        ]
    },
    {
        "id": "d3ede433c8660b18",
        "type": "debug",
        "z": "1c8b0c202345de2d",
        "name": "Debug PT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 550,
        "y": 100,
        "wires": []
    },
    {
        "id": "51c39b502d279935",
        "type": "ui_chart",
        "z": "1c8b0c202345de2d",
        "name": "",
        "group": "bba8abb3efe5e226",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Potência atual",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff8000",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 560,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "198d4d935011965e",
        "type": "function",
        "z": "1c8b0c202345de2d",
        "name": "function 2",
        "func": "var count = ((context.get(\"counter\") || 0) + msg.payload / (360 * 1000))\nmsg.payload = Math.round(count*10000)/10000;\ncontext.set(\"counter\", count);\nvar dt = new Date();\nif (dt.getHours() == 0 && dt.getMinutes() == 0 && dt.getSeconds() <= 30) {\n    context.set(\"counter\", 0);\n    msg.payload = 0;\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 280,
        "wires": [
            [
                "6e87f244d4348c1f",
                "a2bcab0fd9d5ef1f",
                "0b6aceeb98c9ca95"
            ]
        ]
    },
    {
        "id": "a2bcab0fd9d5ef1f",
        "type": "ui_chart",
        "z": "1c8b0c202345de2d",
        "name": "",
        "group": "bba8abb3efe5e226",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Consumo Acumulado (kWh)",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff8000",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 600,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "6e87f244d4348c1f",
        "type": "debug",
        "z": "1c8b0c202345de2d",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 540,
        "y": 300,
        "wires": []
    },
    {
        "id": "0b6aceeb98c9ca95",
        "type": "ui_text",
        "z": "1c8b0c202345de2d",
        "group": "bba8abb3efe5e226",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Consumo Acumulado (kWh)",
        "format": "{{msg.payload + \" kWh\"}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 600,
        "y": 220,
        "wires": []
    },
    {
        "id": "51448dfe2c8a0513",
        "type": "postgresql",
        "z": "1c8b0c202345de2d",
        "name": "",
        "query": "SELECT date_trunc('day', timestamp) AS simple_date,\n    SUM(consumo_ativo_acumulado_total) AS consumo_diario\nFROM consumo\nWHERE timestamp BETWEEN '{{{ msg.payload.start_date }}}' and '{{{ msg.payload.end_date }}}'\nGROUP BY simple_date\nORDER BY simple_date;",
        "postgreSQLConfig": "9973bf030ca284b8",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 670,
        "y": 520,
        "wires": [
            [
                "200f9076be604bc5",
                "b255ada061bae768"
            ]
        ]
    },
    {
        "id": "8379cdb7fe2d6260",
        "type": "debug",
        "z": "1c8b0c202345de2d",
        "name": "Query Anual",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 710,
        "y": 440,
        "wires": []
    },
    {
        "id": "237168cf1d013dc0",
        "type": "ui_chart",
        "z": "1c8b0c202345de2d",
        "name": "",
        "group": "b393f35ae74b6241",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Consumo Por Dia no mês",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#ff8000",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1110,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "200f9076be604bc5",
        "type": "function",
        "z": "1c8b0c202345de2d",
        "name": "function 4",
        "func": "const data = msg.payload;\nconst days = [];\nconst consumos = [];\n\nconst getDate = (date) => {\n    const day = date.getDate();\n    const month = date.getMonth() + 1; \n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n} \n\ndata.forEach(dt => {\n    var label = new Date(dt.simple_date);\n    days.push(getDate(label));\n    consumos.push(dt.consumo_diario)    \n});\n\nmsg.payload = [{\n    'labels': days,\n    'series': ['consumo'],\n    'data': [consumos]\n}];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 520,
        "wires": [
            [
                "237168cf1d013dc0"
            ]
        ]
    },
    {
        "id": "d8efac61362ca361",
        "type": "postgresql",
        "z": "1c8b0c202345de2d",
        "name": "",
        "query": "SELECT date_trunc('month', timestamp) AS simple_date,\n    SUM(consumo_ativo_acumulado_total) AS consumo_diario\nFROM consumo\nWHERE timestamp BETWEEN '{{{ msg.payload.start_date }}}' and '{{{ msg.payload.end_date }}}'\nGROUP BY simple_date\nORDER BY simple_date;",
        "postgreSQLConfig": "9973bf030ca284b8",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 510,
        "y": 400,
        "wires": [
            [
                "2ab8321d2c363dbb",
                "8379cdb7fe2d6260"
            ]
        ]
    },
    {
        "id": "2ab8321d2c363dbb",
        "type": "function",
        "z": "1c8b0c202345de2d",
        "name": "function 5",
        "func": "const data = msg.payload;\nconst months = [];\nconst consumos = [];\nconst month_label = [\n    'Janeiro', 'Fevereiro', 'Março', 'Abril',\n    'Maio', 'Junho', 'Julho', 'Agosto',\n    'Setembro', 'Outubro', 'Novembro', 'Dezembro'\n];\n\nconst getDate = (date) => month_label[date.getMonth()];\n\n\ndata.forEach(dt => {\n    var label = new Date(dt.simple_date);\n    months.push(getDate(label));\n    consumos.push(dt.consumo_diario)    \n});\n\nmsg.payload = [{\n    'labels': months,\n    'series': ['consumo'],\n    'data': [consumos]\n}];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 400,
        "wires": [
            [
                "162adb48bfcbd99d"
            ]
        ]
    },
    {
        "id": "162adb48bfcbd99d",
        "type": "ui_chart",
        "z": "1c8b0c202345de2d",
        "name": "",
        "group": "b393f35ae74b6241",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Consumo Anual",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#ff8000",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 920,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "b99f2aadfe5216f0",
        "type": "postgresql",
        "z": "1c8b0c202345de2d",
        "name": "",
        "query": "SELECT date_trunc('hour', timestamp) AS hour_interval,\n    AVG(potencia_aparente_total) AS potencia_hora\nFROM demanda\nWHERE timestamp BETWEEN date '{{{ msg.start_date }}}' and '{{{ msg.end_date}}}'\nGROUP BY hour_interval\nORDER BY hour_interval;",
        "postgreSQLConfig": "9973bf030ca284b8",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 570,
        "y": 680,
        "wires": [
            [
                "3a9f0f6325f5dfa0",
                "fcb0eb222bc0388e"
            ]
        ]
    },
    {
        "id": "3a9f0f6325f5dfa0",
        "type": "function",
        "z": "1c8b0c202345de2d",
        "name": "function 7",
        "func": "const data = msg.payload;\nconst horas = [];\nconst pot_avg = [];\n\nconst getDate = (date) => {\n    return date.getHours();\n} \n\ndata.forEach(dt => {\n    var label = new Date(dt.hour_interval);\n    horas.push(getDate(label));\n    pot_avg.push(dt.potencia_hora)    \n});\n\nmsg.payload = [{\n    'labels': horas,\n    'series': ['Potência média'],\n    'data': [pot_avg]\n}];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 680,
        "wires": [
            [
                "5af3b8d1e3098e36"
            ]
        ]
    },
    {
        "id": "5af3b8d1e3098e36",
        "type": "ui_chart",
        "z": "1c8b0c202345de2d",
        "name": "",
        "group": "3da1a88e973e1236",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Potência média por hora",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#ff8000",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "e6cb2ad045042a8c",
        "type": "function",
        "z": "1c8b0c202345de2d",
        "name": "function convert",
        "func": "var dt = new Date(msg.payload);\nvar day = dt.getDate();\nvar month = dt.getMonth() + 1;\nvar year = dt.getFullYear();\n\nmsg.start_date = `${year}-${month}-${day}`;\nmsg.end_date = `${year}-${month}-${day+1}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 680,
        "wires": [
            [
                "b99f2aadfe5216f0"
            ]
        ]
    },
    {
        "id": "65a92efb5f4bb2f5",
        "type": "ui_dropdown",
        "z": "1c8b0c202345de2d",
        "name": "",
        "label": "Mês de análise",
        "tooltip": "",
        "place": "Selecione o mês",
        "group": "e8192717fdd43381",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Janeiro",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Fevereiro",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Março",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Abril",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Maio",
                "value": 4,
                "type": "num"
            },
            {
                "label": "Junho",
                "value": 5,
                "type": "num"
            },
            {
                "label": "Julho",
                "value": 6,
                "type": "num"
            },
            {
                "label": "Agosto",
                "value": 7,
                "type": "num"
            },
            {
                "label": "Setembro",
                "value": 8,
                "type": "num"
            },
            {
                "label": "Outubro",
                "value": 9,
                "type": "num"
            },
            {
                "label": "Novembro",
                "value": 10,
                "type": "num"
            },
            {
                "label": "Dezembro",
                "value": "11",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "mes",
        "topicType": "str",
        "className": "",
        "x": 140,
        "y": 520,
        "wires": [
            [
                "27c01f383fc2c654"
            ]
        ]
    },
    {
        "id": "f219e2644884d98a",
        "type": "ui_dropdown",
        "z": "1c8b0c202345de2d",
        "name": "",
        "label": "Ano de Análise",
        "tooltip": "",
        "place": "Select option",
        "group": "e8192717fdd43381",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "2022",
                "value": 2022,
                "type": "num"
            },
            {
                "label": "2023",
                "value": 2023,
                "type": "num"
            },
            {
                "label": "2024",
                "value": 2024,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "ano",
        "topicType": "str",
        "className": "",
        "x": 140,
        "y": 400,
        "wires": [
            [
                "21abe247ba399a11",
                "27c01f383fc2c654"
            ]
        ]
    },
    {
        "id": "21abe247ba399a11",
        "type": "function",
        "z": "1c8b0c202345de2d",
        "name": "function 8",
        "func": "const selectedYear = msg.payload;\n\nmsg.payload = {\n    'start_date': `${selectedYear}-01-01 00:00:00`,\n    'end_date': `${selectedYear+1}-01-01 00:00:00`,\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 400,
        "wires": [
            [
                "d8efac61362ca361"
            ]
        ]
    },
    {
        "id": "b255ada061bae768",
        "type": "debug",
        "z": "1c8b0c202345de2d",
        "name": "Query Mensal",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 880,
        "y": 560,
        "wires": []
    },
    {
        "id": "e44fc80ab0c7e5c4",
        "type": "function",
        "z": "1c8b0c202345de2d",
        "name": "function 9",
        "func": "const selectedYear = msg.payload.ano ? msg.payload.ano : 2024;\nconst actualMonth = msg.payload.mes ? msg.payload.mes + 1 : 1;\nconst nextMonth = actualMonth + 1;\nmsg.payload = {\n    'start_date': `${selectedYear}-${actualMonth}-01`,\n    'end_date': `${selectedYear}-${nextMonth}-01`,\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 520,
        "wires": [
            [
                "51448dfe2c8a0513",
                "17c8847a090c4c20"
            ]
        ]
    },
    {
        "id": "27c01f383fc2c654",
        "type": "join",
        "z": "1c8b0c202345de2d",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "1",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 340,
        "y": 520,
        "wires": [
            [
                "e44fc80ab0c7e5c4",
                "ff4cc9834c46be3c"
            ]
        ]
    },
    {
        "id": "ff4cc9834c46be3c",
        "type": "debug",
        "z": "1c8b0c202345de2d",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 580,
        "wires": []
    },
    {
        "id": "17c8847a090c4c20",
        "type": "debug",
        "z": "1c8b0c202345de2d",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 600,
        "wires": []
    },
    {
        "id": "06d379968e454bf1",
        "type": "ui_date_picker",
        "z": "1c8b0c202345de2d",
        "name": "",
        "label": "Dia",
        "group": "3da1a88e973e1236",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 210,
        "y": 720,
        "wires": [
            [
                "e6cb2ad045042a8c"
            ]
        ]
    },
    {
        "id": "bfb81efe6144920b",
        "type": "inject",
        "z": "1c8b0c202345de2d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "e6cb2ad045042a8c"
            ]
        ]
    },
    {
        "id": "fcb0eb222bc0388e",
        "type": "debug",
        "z": "1c8b0c202345de2d",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 720,
        "wires": []
    }
]